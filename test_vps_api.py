#!/usr/bin/env python3
"""
–¢–µ—Å—Ç API –Ω–∞ VPS –¥–ª—è –≠—Ç–∞–ø–∞ 3
"""
import json
import requests
from datetime import datetime, timezone

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
VPS_URL = "http://195.133.81.197:8000"

def test_health():
    """–¢–µ—Å—Ç health endpoint"""
    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ /health...")
    
    try:
        response = requests.get(f"{VPS_URL}/health", timeout=10)
        if response.status_code == 200 and response.text == "ok":
            print("‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå Health endpoint: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def test_webhook_comment():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º...")
    
    test_payload = {
        "event": "comment",
        "task": {
            "id": 12345,
            "subject": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –≠—Ç–∞–ø–∞ 3",
            "comments": [
                {
                    "id": 99999,
                    "text": "–¢–µ—Å—Ç–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º @User1 @User2",
                    "create_date": datetime.now(timezone.utc).isoformat(),
                    "author": {
                        "id": 100,
                        "first_name": "Test",
                        "last_name": "Author"
                    },
                    "mentions": [106, 107]  # –î–≤–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
                }
            ]
        },
        "actor": {
            "id": 100,
            "first_name": "Test",
            "last_name": "Author"
        }
    }
    
    try:
        response = requests.post(
            f"{VPS_URL}/pyrus/webhook",
            json=test_payload,
            headers={
                "X-Pyrus-Retry": "1/1",
                "Content-Type": "application/json"
            },
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ Webhook –æ–±—Ä–∞–±–æ—Ç–∞–Ω: {result}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ webhook: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ webhook: {e}")
        return False

def test_webhook_reaction():
    """–¢–µ—Å—Ç —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    test_payload = {
        "event": "task_updated",
        "task": {
            "id": 12345,
            "subject": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞"
        },
        "actor": {
            "id": 106,  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–µ—Å—Ç–∞
            "first_name": "Mentioned",
            "last_name": "User"
        },
        "change": {
            "kind": "field_changed"
        }
    }
    
    try:
        response = requests.post(
            f"{VPS_URL}/pyrus/webhook",
            json=test_payload,
            headers={
                "X-Pyrus-Retry": "1/1",
                "Content-Type": "application/json"
            },
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –†–µ–∞–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞: {result}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–∫—Ü–∏–∏: {e}")
        return False

def test_webhook_closure():
    """–¢–µ—Å—Ç –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞–¥–∞—á–∏"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –∑–∞–¥–∞—á–∏...")
    
    test_payload = {
        "event": "task_closed",
        "task": {
            "id": 12345,
            "subject": "–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞"
        },
        "actor": {
            "id": 100,
            "first_name": "Admin",
            "last_name": "User"
        }
    }
    
    try:
        response = requests.post(
            f"{VPS_URL}/pyrus/webhook",
            json=test_payload,
            headers={
                "X-Pyrus-Retry": "1/1",
                "Content-Type": "application/json"
            },
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: {response.status_code} - {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è: {e}")
        return False

def test_invalid_json():
    """–¢–µ—Å—Ç —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º JSON"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ JSON...")
    
    try:
        response = requests.post(
            f"{VPS_URL}/pyrus/webhook",
            data="invalid json",
            headers={
                "X-Pyrus-Retry": "1/1",
                "Content-Type": "application/json"
            },
            timeout=10
        )
        
        if response.status_code == 400:
            print("‚úÖ –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω")
            return True
        else:
            print(f"‚ùå –û–∂–∏–¥–∞–ª—Å—è –∫–æ–¥ 400, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–æ–≥–æ JSON: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –≠—Ç–∞–ø–∞ 3 –Ω–∞ VPS")
    print(f"üîó VPS URL: {VPS_URL}")
    print("=" * 60)
    
    success = True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    success &= test_health()
    
    if not success:
        print("\n‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ VPS")
        print("üìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞ VPS:")
        print("1. cd /path/to/PyrusTelegramBot")
        print("2. uvicorn app.api:app --host 0.0.0.0 --port 80")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    success &= test_webhook_comment()
    success &= test_webhook_reaction()
    success &= test_webhook_closure()
    success &= test_invalid_json()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ API –≠—Ç–∞–ø–∞ 3 —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ webhook —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç")
        print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è JSON —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ –õ–æ–≥–∏–∫–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏ —Ä–µ–∞–∫—Ü–∏–π —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞")
        print("\nüöÄ –ì–û–¢–û–í–´ –ö –≠–¢–ê–ü–£ 4!")
    else:
        print("‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –Ω—É–∂–Ω–æ –∏—Ö –∏—Å–ø—Ä–∞–≤–∏—Ç—å")
    print("=" * 60)

if __name__ == "__main__":
    main()
