#!/bin/bash

# üîç –ü–û–õ–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PYRUS TELEGRAM BOT –°–ò–°–¢–ï–ú–´
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./diagnose_system.sh

set -e

echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PYRUS TELEGRAM BOT –°–ò–°–¢–ï–ú–´"
echo "=========================================="
echo "–í—Ä–µ–º—è: $(date)"
echo "–°–µ—Ä–≤–µ—Ä: $(hostname)"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
error() { echo -e "${RED}‚ùå $1${NC}"; }
warning() { echo -e "${YELLOW}‚ö†Ô∏è $1${NC}"; }
info() { echo -e "${BLUE}‚ÑπÔ∏è $1${NC}"; }

# –°—á–µ—Ç—á–∏–∫–∏
ERRORS=0
WARNINGS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∑–∞–ø–∏—Å–∏ –æ—à–∏–±–æ–∫
check_result() {
    if [ $1 -eq 0 ]; then
        success "$2"
    else
        error "$2"
        ((ERRORS++))
    fi
}

check_warning() {
    if [ $1 -eq 0 ]; then
        success "$2"
    else
        warning "$2"
        ((WARNINGS++))
    fi
}

echo "üìã 1. –ü–†–û–í–ï–†–ö–ê –û–ö–†–£–ñ–ï–ù–ò–Ø"
echo "========================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ Python 3... "
if command -v python3 >/dev/null 2>&1; then
    PYTHON_VERSION=$(python3 --version 2>&1)
    success "Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PYTHON_VERSION"
else
    error "Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    ((ERRORS++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ pip3... "
if command -v pip3 >/dev/null 2>&1; then
    PIP_VERSION=$(pip3 --version 2>&1)
    success "pip3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PIP_VERSION"
else
    error "pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    ((ERRORS++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞... "
if [ -d "/root/PyrusTelegramBot" ]; then
    cd /root/PyrusTelegramBot
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–π–¥–µ–Ω–∞"
else
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /root/PyrusTelegramBot –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    ((ERRORS++))
    exit 1
fi

echo ""
echo "üìã 2. –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –ü–†–û–ï–ö–¢–ê"
echo "============================="

# –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
REQUIRED_FILES=(
    "app/__init__.py"
    "app/api.py"
    "app/bot.py"
    "app/worker.py"
    "app/db.py"
    "app/utils.py"
    "app/models.py"
    "requirements.txt"
    ".env"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ -f "$file" ]; then
        success "–§–∞–π–ª $file –Ω–∞–π–¥–µ–Ω"
    else
        error "–§–∞–π–ª $file –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
        ((ERRORS++))
    fi
done

echo ""
echo "üìã 3. –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø"
echo "==================================="

if [ -f ".env" ]; then
    source .env
    
    # –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    REQUIRED_VARS=(
        "BOT_TOKEN"
        "ADMIN_IDS"
        "SUPABASE_URL"
        "SUPABASE_KEY"
        "PYRUS_LOGIN"
        "PYRUS_SECURITY_KEY"
    )
    
    for var in "${REQUIRED_VARS[@]}"; do
        if [ -n "${!var}" ]; then
            success "$var —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (${#!var} —Å–∏–º–≤–æ–ª–æ–≤)"
        else
            error "$var –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê!"
            ((ERRORS++))
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    if [ -n "$PYRUS_WEBHOOK_SECRET" ]; then
        if [ "$PYRUS_WEBHOOK_SECRET" = "–ó–ê–ú–ï–ù–ò_–ù–ê_–†–ï–ê–õ–¨–ù–´–ô_–°–ï–ö–†–ï–¢" ] || [ "$PYRUS_WEBHOOK_SECRET" = "temporary_placeholder" ]; then
            warning "PYRUS_WEBHOOK_SECRET –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∑–∞–≥–ª—É—à–∫—É (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞)"
        else
            success "PYRUS_WEBHOOK_SECRET –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        fi
    fi
    
    if [ "$DEV_SKIP_PYRUS_SIG" = "true" ]; then
        warning "DEV_SKIP_PYRUS_SIG=true (–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞)"
    fi
    
else
    error "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    ((ERRORS++))
fi

echo ""
echo "üìã 4. –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô PYTHON"
echo "=================================="

echo -n "–£—Å—Ç–∞–Ω–æ–≤–∫–∞/–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π... "
if pip3 install -r requirements.txt >/dev/null 2>&1; then
    success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    error "–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π!"
    ((ERRORS++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
REQUIRED_MODULES=(
    "fastapi"
    "uvicorn"
    "telegram"
    "supabase"
    "pydantic"
    "dotenv"
)

for module in "${REQUIRED_MODULES[@]}"; do
    if python3 -c "import $module" 2>/dev/null; then
        success "–ú–æ–¥—É–ª—å $module –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        error "–ú–æ–¥—É–ª—å $module –ù–ï –ù–ê–ô–î–ï–ù!"
        ((ERRORS++))
    fi
done

echo ""
echo "üìã 5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô"
echo "=============================="

# –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo -n "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase... "
DB_TEST=$(python3 -c "
from dotenv import load_dotenv
load_dotenv()
try:
    from app.db import db
    settings = db.settings_get('service_enabled')
    print(f'SUCCESS:{settings}')
except Exception as e:
    print(f'ERROR:{e}')
" 2>&1)

if [[ $DB_TEST == SUCCESS:* ]]; then
    success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞, service_enabled=${DB_TEST#SUCCESS:}"
else
    error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${DB_TEST#ERROR:}"
    ((ERRORS++))
fi

# –¢–µ—Å—Ç Telegram API
echo -n "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram... "
TG_TEST=$(python3 -c "
import asyncio
import os
from dotenv import load_dotenv
load_dotenv()

async def test_telegram():
    try:
        import telegram
        bot_token = os.getenv('BOT_TOKEN')
        if bot_token:
            bot = telegram.Bot(token=bot_token)
            me = await bot.get_me()
            print(f'SUCCESS:@{me.username}')
        else:
            print('ERROR:BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    except Exception as e:
        print(f'ERROR:{e}')

asyncio.run(test_telegram())
" 2>&1)

if [[ $TG_TEST == SUCCESS:* ]]; then
    success "Telegram –±–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: ${TG_TEST#SUCCESS:}"
else
    error "Telegram: ${TG_TEST#ERROR:}"
    ((ERRORS++))
fi

echo ""
echo "üìã 6. –ü–†–û–í–ï–†–ö–ê SYSTEMD –°–ï–†–í–ò–°–û–í"
echo "==============================="

SERVICES=("pyrus-api" "pyrus-bot" "pyrus-worker")

for service in "${SERVICES[@]}"; do
    echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $service... "
    
    if systemctl is-enabled $service >/dev/null 2>&1; then
        if systemctl is-active $service >/dev/null 2>&1; then
            success "$service –∞–∫—Ç–∏–≤–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        else
            error "$service –≤–∫–ª—é—á–µ–Ω –Ω–æ –ù–ï –†–ê–ë–û–¢–ê–ï–¢!"
            ((ERRORS++))
            info "–°—Ç–∞—Ç—É—Å: $(systemctl status $service --no-pager -l | head -3 | tail -1)"
        fi
    else
        error "$service –ù–ï –ù–ê–°–¢–†–û–ï–ù!"
        ((ERRORS++))
    fi
done

echo ""
echo "üìã 7. –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í –ò API"
echo "=========================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 8000
echo -n "–ü—Ä–æ–≤–µ—Ä–∫–∞ API –Ω–∞ –ø–æ—Ä—Ç—É 8000... "
if curl -s http://localhost:8000/health >/dev/null 2>&1; then
    HEALTH_RESPONSE=$(curl -s http://localhost:8000/health)
    success "API –æ—Ç–≤–µ—á–∞–µ—Ç: $HEALTH_RESPONSE"
else
    error "API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8000!"
    ((ERRORS++))
fi

# –¢–µ—Å—Ç webhook endpoint
echo -n "–¢–µ—Å—Ç webhook endpoint... "
WEBHOOK_TEST=$(curl -s -X POST http://localhost:8000/pyrus/webhook \
    -H "Content-Type: application/json" \
    -d '{"event":"test","task":{"id":1}}' 2>&1)

if [[ $WEBHOOK_TEST == *"webhook processed"* ]]; then
    success "Webhook endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "Webhook endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: $WEBHOOK_TEST"
    ((ERRORS++))
fi

echo ""
echo "üìã 8. –ü–†–û–í–ï–†–ö–ê –õ–û–ì–û–í"
echo "==================="

for service in "${SERVICES[@]}"; do
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ $service:"
    echo "------------------------"
    journalctl -u $service --lines=3 --no-pager | tail -3
    echo ""
done

echo ""
echo "üìã 9. –ü–†–û–í–ï–†–ö–ê –†–ï–°–£–†–°–û–í"
echo "======================="

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞
echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
df -h / | tail -1

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏
echo "üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
free -h | head -2

# –ü—Ä–æ—Ü–µ—Å—Å—ã Python
echo "‚öôÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã Python:"
ps aux | grep python | grep -v grep | head -5

echo ""
echo "üìã 10. –í–ù–ï–®–ù–ò–ô –î–û–°–¢–£–ü"
echo "====================="

# –ü–æ–ª—É—á–∞–µ–º –≤–Ω–µ—à–Ω–∏–π IP
EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null || echo "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω")
echo "üåê –í–Ω–µ—à–Ω–∏–π IP: $EXTERNAL_IP"

# –¢–µ—Å—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
echo -n "–¢–µ—Å—Ç –≤–Ω–µ—à–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ API... "
if timeout 10 curl -s http://$EXTERNAL_IP:8000/health >/dev/null 2>&1; then
    success "API –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ"
else
    warning "API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑–≤–Ω–µ (firewall?)"
    ((WARNINGS++))
fi

echo ""
echo "üéØ –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢"
echo "=================="

if [ $ERRORS -eq 0 ] && [ $WARNINGS -eq 0 ]; then
    echo -e "${GREEN}üéâ –í–°–ï –û–¢–õ–ò–ß–ù–û! –°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!${NC}"
elif [ $ERRORS -eq 0 ]; then
    echo -e "${YELLOW}‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∑–∞–º–µ—á–∞–Ω–∏—è–º–∏${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNINGS${NC}"
else
    echo -e "${RED}‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´, —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è!${NC}"
    echo -e "${RED}üí• –û—à–∏–±–æ–∫: $ERRORS${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $WARNINGS${NC}"
fi

echo ""
echo "üìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "=================="

if [ $ERRORS -gt 0 ]; then
    echo "üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É"
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤: systemctl restart pyrus-api pyrus-bot pyrus-worker"
else
    echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Pyrus webhook –Ω–∞: http://$EXTERNAL_IP:8000/pyrus/webhook"
    echo "ü§ñ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ –≤ Telegram"
    echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: journalctl -u pyrus-* -f"
fi

echo ""
echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: $(date)"
echo "=========================================="

exit $ERRORS
