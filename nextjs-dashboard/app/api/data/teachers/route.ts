/**
 * API Route: /api/data/teachers
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * GET /api/data/teachers
 * GET /api/data/teachers?group=oldies  (—Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ä–∏—á–∫–∏)
 * GET /api/data/teachers?group=trial   (—Ç–æ–ª—å–∫–æ –ë–ü–ó)
 * 
 * –û—Ç–≤–µ—Ç:
 * {
 *   "teachers": [...],
 *   "oldies_groups": {...},
 *   "trial_groups": {...},
 *   "timestamp": "2025-10-03T12:00:00Z"
 * }
 */

import { NextResponse } from 'next/server';
import { cache } from '@/lib/cache';

export async function GET(request: Request) {
  try {
    console.log('üìä [API] GET /api/data/teachers');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –∫—ç—à–µ
    const data = cache.getAnalysisResult();

    if (!data) {
      console.warn('‚ö†Ô∏è [API] –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫—ç—à–µ');
      return NextResponse.json(
        {
          error: '–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ POST /api/sync/trigger',
        },
        { status: 404 }
      );
    }

    // –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
    const { searchParams } = new URL(request.url);
    const group = searchParams.get('group');

    // –§–∏–ª—å—Ç—Ä –ø–æ –≥—Ä—É–ø–ø–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if (group === 'oldies') {
      console.log('üìä [API] –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ oldies_groups');
      return NextResponse.json({
        groups: data.oldies_groups,
        timestamp: data.timestamp,
      });
    }

    if (group === 'trial') {
      console.log('üìä [API] –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ trial_groups');
      return NextResponse.json({
        groups: data.trial_groups,
        timestamp: data.timestamp,
      });
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º
    console.log('üìä [API] –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º');
    return NextResponse.json({
      teachers: data.teachers,
      oldies_groups: data.oldies_groups,
      trial_groups: data.trial_groups,
      timestamp: data.timestamp,
    });
  } catch (error) {
    console.error('‚ùå [API] –û—à–∏–±–∫–∞ –≤ /api/data/teachers:', error);
    return NextResponse.json(
      {
        error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
        details: error instanceof Error ? error.message : 'Unknown error',
      },
      { status: 500 }
    );
  }
}

