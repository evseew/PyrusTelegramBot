/**
 * –¢–∞–±–ª–∏—Ü–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —Å –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–æ–π –∏ –ø—Ä–∏–∑–∞–º–∏
 * –ê–Ω–∞–ª–æ–≥ –≤–∫–ª–∞–¥–æ–∫ Excel "–í—ã–≤–æ–¥ —Å—Ç–∞—Ä–∏—á–∫–æ–≤" –∏ "–ö–æ–Ω–≤–µ—Ä—Å–∏—è –ø–æ—Å–ª–µ –ë–ü–ó"
 */

'use client';

import type { TeacherStats } from '../lib/types';

interface Props {
  groups: {
    [key: string]: TeacherStats[];
  };
  type: 'oldies' | 'trial';
}

const PRIZES_CONFIG = {
  oldies: {
    '35+': { prizes: ['üì± iPad', 'üì≤ HonorPad', 'üì≤ HonorPad', 'üì≤ HonorPad'], count: 4 },
    '16-34': { prize: 'üì≤ HonorPad', count: 3 },
    '6-15': { prize: 'üíé Tg Premium', count: 3 },
  },
  trial: {
    '16+': { prizes: ['üì± iPad', 'üì≤ HonorPad', 'üì≤ HonorPad', 'üì≤ HonorPad'], count: 4 },
    '11-15': { prize: 'üì≤ HonorPad', count: 3 },
    '5-10': { prize: 'üíé Tg Premium', count: 3 },
  },
};

const GROUP_EMOJIS = {
  '35+': 'ü•á',
  '16-34': 'ü•à',
  '6-15': 'ü•â',
  '16+': 'ü•á',
  '11-15': 'ü•à',
  '5-10': 'ü•â',
};

export function TeachersTable({ groups, type }: Props) {
  const groupKeys = Object.keys(groups);
  const config = PRIZES_CONFIG[type];

  return (
    <div className="space-y-8">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <p className="text-sm text-blue-800">
          –£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º PE: Start, Future, PE 5, –ö–∏—Ç–∞–π—Å–∫–∏–π. 
          –ü—Ä–æ—Ü–µ–Ω—Ç = –¥–æ–ª—è —Ñ–æ—Ä–º —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "—É—á–∏—Ç—Å—è".
        </p>
      </div>

      {groupKeys.map((groupName) => {
        const teachers = groups[groupName];
        if (!teachers || teachers.length === 0) return null;

        const groupConfig = config[groupName as keyof typeof config];
        const emoji = GROUP_EMOJIS[groupName as keyof typeof GROUP_EMOJIS] || 'üìã';

        return (
          <div key={groupName} className="bg-white rounded-lg shadow-md overflow-hidden">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–ø—ã */}
            <div className="bg-gradient-to-r from-blue-600 to-blue-700 px-6 py-4">
              <h2 className="text-xl font-bold text-white">
                {emoji} –ì—Ä—É–ø–ø–∞ {groupName} {type === 'oldies' ? '—Å—Ç—É–¥–µ–Ω—Ç–æ–≤' : '–ë–ü–ó —Å—Ç—É–¥–µ–Ω—Ç–æ–≤'}
              </h2>
            </div>

            {/* –¢–∞–±–ª–∏—Ü–∞ */}
            <div className="overflow-x-auto">
              <table className="min-w-full divide-y divide-gray-200">
                <thead className="bg-gray-50">
                  <tr>
                    <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      ‚Ññ / üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
                    </th>
                    <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                      üìä –í—Å–µ–≥–æ
                    </th>
                    <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                      üéì –£—á–∏—Ç—Å—è
                    </th>
                    <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                      üìà %
                    </th>
                    <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                      üèÜ –ü—Ä–∏–∑
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {teachers.map((teacher, index) => {
                    const isPrizeWinner = index < (groupConfig?.count || 0);
                    let prize = '';

                    if (isPrizeWinner && groupConfig) {
                      if ('prizes' in groupConfig) {
                        prize = groupConfig.prizes[index];
                      } else {
                        prize = groupConfig.prize;
                      }
                    }

                    const percentage = type === 'oldies' 
                      ? teacher.return_percentage 
                      : teacher.conversion_percentage;

                    const total = type === 'oldies'
                      ? teacher.form_2304918_total
                      : teacher.form_792300_total;

                    const studying = type === 'oldies'
                      ? teacher.form_2304918_studying
                      : teacher.form_792300_studying;

                    return (
                      <tr
                        key={teacher.name}
                        className={isPrizeWinner ? 'bg-yellow-50' : 'hover:bg-gray-50'}
                      >
                        <td className="px-6 py-4 whitespace-nowrap">
                          <div className="flex items-center">
                            <span className="text-sm font-medium text-gray-500 mr-3">
                              {index + 1}.
                            </span>
                            <span className="text-sm font-medium text-gray-900">
                              {teacher.name}
                            </span>
                          </div>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-center text-sm text-gray-900">
                          {total}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-center text-sm text-gray-900">
                          {studying}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-center">
                          <span className={`text-sm font-semibold ${
                            percentage >= 70 ? 'text-green-600' :
                            percentage >= 50 ? 'text-yellow-600' :
                            'text-red-600'
                          }`}>
                            {percentage.toFixed(2)}%
                          </span>
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-center text-sm">
                          {prize && (
                            <span className="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                              {prize}
                            </span>
                          )}
                        </td>
                      </tr>
                    );
                  })}
                </tbody>
              </table>
            </div>
          </div>
        );
      })}
    </div>
  );
}


